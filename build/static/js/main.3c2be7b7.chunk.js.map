{"version":3,"sources":["Header.js","pages/work/Work.js","pages/infos/Infos.js","pages/contact/Contact.js","pages/follow/Follow.js","serviceWorker.js","index.js","App.js"],"names":["Header","NProgress","start","className","to","PostLink","props","item","console","log","jetpack_featured_media_url","alt","src","$item","$","content","rendered","title","html","window","Home","state","postList","isPostListLoad","ajax","method","url","then","rs","setState","this","CSSTransition","in","timeout","classNames","breakpointCols","columnClassName","map","index","key","React","Component","Infos","isMounted","Contact","Follow","Boolean","location","hostname","match","ReactDOM","render","path","Work","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c2be7b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.scss\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NProgress from \"nprogress\";\n\nexport default function Header() {\n  NProgress.start();\n  return (\n    <header className=\"comp-header\">\n      <div className=\"title-box\">\n        <Link className=\"nav-link\" to=\"/\">\n          gogwe\n        </Link>\n      </div>\n      <nav className=\"nav-box\">\n        <ul>\n          <li className=\"nav-link-box\">\n            <Link className=\"nav-link\" to=\"/\">\n              work\n            </Link>\n          </li>\n          <li className=\"nav-link-box\">\n            <Link className=\"nav-link\" to=\"/infos\">\n              infos\n            </Link>\n          </li>\n          <li className=\"nav-link-box\">\n            <Link className=\"nav-link\" to=\"/contact\">\n              contact\n            </Link>\n          </li>\n          <li className=\"nav-link-box\">\n            <Link className=\"nav-link\" to=\"/follow\">\n              follow\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import React from \"react\";\nimport $ from \"jquery\";\nimport Masonry from \"react-masonry-css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./work.scss\";\n\nwindow.$ = $;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postList: [],\n      isPostListLoad: false\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      method: \"get\",\n      url: `https://gwerichang.com/gogwe/?rest_route=/wp/v2/posts`\n    }).then(rs => {\n      this.setState({\n        postList: rs,\n        isPostListLoad: true\n      });\n    });\n  }\n\n  render() {\n    const { postList, isPostListLoad } = this.state;\n    return (\n      <div className=\"home-comp\">\n        <CSSTransition in={isPostListLoad} timeout={200} classNames=\"fade\">\n          <Masonry\n            breakpointCols={4}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {postList.map((item, index) => {\n              return <PostLink item={item} key={index}></PostLink>;\n            })}\n          </Masonry>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nfunction PostLink(props) {\n  const item = props.item;\n  console.log(item);\n  // 대표 이미지가 있는 글\n  if (item.jetpack_featured_media_url) {\n    return (\n      <div className=\"post-link-box\">\n        <div className=\"post-link-content\">\n          <img\n            alt=\"gogwe\"\n            className=\"post-image\"\n            src={item.jetpack_featured_media_url}\n          ></img>\n        </div>\n      </div>\n    );\n  }\n  // 없는 글\n  else {\n    const $item = $(item.content.rendered);\n    return (\n      <div className=\"post-link-box\">\n        <div className=\"post-link-content\">\n          <div>{item.title.rendered}</div>{\" \"}\n          <div>{$item ? $item.html() : \"\"}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport $ from \"jquery\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./infos.scss\";\n\nclass Infos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMounted: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n  }\n\n  render() {\n    const { isMounted } = this.state;\n    return (\n      <div className=\"infos-comp\">\n        <CSSTransition in={isMounted} timeout={200} classNames=\"fade\">\n          <div>infos</div>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default Infos;\n","import React from \"react\";\nimport $ from \"jquery\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./contact.scss\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMounted: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n  }\n\n  render() {\n    const { isMounted } = this.state;\n    return (\n      <div className=\"contact-comp\">\n        <CSSTransition in={isMounted} timeout={200} classNames=\"fade\">\n          <div>contact</div>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport $ from \"jquery\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./follow.scss\";\n\nclass Follow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMounted: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n  }\n\n  render() {\n    const { isMounted } = this.state;\n    return (\n      <div className=\"follow-comp\">\n        <CSSTransition in={isMounted} timeout={200} classNames=\"fade\">\n          <div>follow</div>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default Follow;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./reset.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Work from \"./pages/work/Work\";\nimport Infos from \"./pages/infos/Infos\";\nimport Contact from \"./pages/contact/Contact\";\nimport Follow from \"./pages/follow/Follow\";\n\nimport \"./app.scss\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Header></Header>\n        <div className=\"content-wrap\">\n          <Switch>\n            <Route path=\"/infos\">\n              <Infos />\n            </Route>\n            <Route path=\"/contact\">\n              <Contact />\n            </Route>\n            <Route path=\"/follow\">\n              <Follow />\n            </Route>\n            <Route path=\"/\">\n              <Work />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n"],"sourceRoot":""}